<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:spring="http://www.mulesoft.org/schema/mule/spring" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/spring http://www.mulesoft.org/schema/mule/spring/current/mule-spring.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd">
	<flow name="maintenance-user" doc:id="a1234ab6-def6-4d91-8cfe-e56ec2716c4f" >
		<http:listener doc:name="Listener" doc:id="a8c0f05f-d67c-4666-9089-149e930c7d89" path="/maintenance" config-ref="HTTP_Listener_maintenance"/>
		<http:basic-security-filter doc:name="Basic security filter" doc:id="70cf9919-348f-4150-971d-8b8c337375c4" realm="maintenance"/>
		<spring:authorization-filter requiredAuthorities="ROLE_ADMIN" doc:id="39c2cc84-47a2-4ba1-8caa-1122cb99c339" />
		<ee:transform doc:name="CDM" doc:id="4133b7d0-19a7-4b6f-911e-a0cad704c0d6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Binaries
output application/json
---
{
	metadata: {
		attributes: [
			{
				name: "user",
				value: attributes.headers.authorization
			},{
				name: "remoteAddress",
				value: attributes.remoteAddress
			},
			{
				name: "user-agent",
				value: attributes.headers."user-agent"
			}
		]
	},
	changetype: payload.changetype,
	reason: payload.reason,
	table: payload.table,
	columns: payload.columns,
	keys: payload.keys
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="1e6b3cba-7257-4fd5-8c00-ecd29ea8e554" >
			<when expression="#[payload.changetype == 'update']" >
				<flow-ref doc:name="maintenance-user-update" doc:id="112afb32-8e18-4cf2-8a76-b43f605f756f" name="maintenance-user-update" />
			</when>
			<when expression="#[payload.changetype == 'delete']" >
				<flow-ref doc:name="maintenance-user-update" doc:id="3f4eb18e-d8bd-419c-98b7-bfdc75767693" name="maintenance-user-delete" />
			</when>
			<otherwise >
				<set-payload value="Unknown action." doc:name="Set Payload" doc:id="f32df9e4-13d8-4cc5-a6ad-af5175f2b457" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="88b71605-d46f-4bb2-9a31-6869ae43f957" message="#[payload]"/>
	</flow>
	<flow name="maintenance-user-update" doc:id="aec36017-ab12-484c-a7fd-5ea9eb52c7d1" >
		<logger level="INFO" doc:name="Logger" doc:id="b2fe80a8-5b4e-4afa-bf64-e29765b87fe2" message="#[payload]"/>
		<db:update doc:name="Update" doc:id="8011bb59-7fcb-46a1-9a35-41558253de29" config-ref="Database_Config">
			<db:sql>update  users
SET 
realname = :realname,
employeeid = :employeeid,
role = :role,
email = :email
where
userid = :userid
and id = :id
</db:sql>
			<db:input-parameters><![CDATA[#[{
   'realname' : payload.columns.keyvalue[?($.name == "realname")][0].value,
  'employeeid' :  payload.columns.keyvalue[?($.name == "employeeid")][0].value,
  'userid' :  payload.keys.keyvalue[?($.name == "userid")][0].value,
  'id' :  payload.keys.keyvalue[?($.name == "id")][0].value,
  'role' : payload.columns.keyvalue[?($.name == "role")][0].value,
  'email' : payload.columns.keyvalue[?($.name == "email")][0].value
}]]]></db:input-parameters>
		</db:update>
	</flow>
	<flow name="maintenance-user-delete" doc:id="b211a1c0-5e5e-4381-b51d-2e5a4a4f9943" >
		<logger level="INFO" doc:name="Logger" doc:id="f1302869-0be0-4a01-aeb2-39f9d4b65a4c" message="#[payload]"/>
		<db:delete doc:name="Delete" doc:id="a6357558-6600-45f5-b1d0-875c67fb382a" config-ref="Database_Config">
			<db:sql >delete from users
where
userid = :userid
and id = :id
</db:sql>
			<db:input-parameters ><![CDATA[#[{
  'userid' :  payload.keys.keyvalue[?($.name == "userid")][0].value,
  'id' :  payload.keys.keyvalue[?($.name == "id")][0].value
}]]]></db:input-parameters>
		</db:delete>
	</flow>
	<flow name="maintenance-menu" doc:id="c793f9a7-3e26-4858-a2a2-a9cdbd102c29" >
		<sftp:listener doc:name="Menu upload" doc:id="4d19c9c3-c79b-43e7-9855-9cba8a4b63d1" config-ref="SFTP_Config" directory="${sftp.inpath}" outputMimeType="application/xlsx" moveToDirectory="/hungrybot/menu/in/processed" recursive="false" renameTo="#[vars.newfilename]">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
		</sftp:listener>
		<logger level="INFO" doc:name="Logger" doc:id="a59609eb-952d-4da6-a46a-d49e1a33b75f" message="#[payload]"/>
		<ee:transform doc:name="to CDM" doc:id="cbfaf334-5428-4df9-80b2-43f8a9ce530e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	metdata: attributes: [
		{
			name: "menu",
			value: "maintenance"
		},
		{
			name: "maintenancetype",
			value: payload.Sheet1.maintenance[0]
		}
	],
	menu: payload.Sheet1 map (menu, menuindex) -> 
		{
			restaurantid: menu.restaurantid as Number,
			item: menu.item as String,
			price: menu.price as Number,
			itemid: menu.itemid as Number
		}
	
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="maintenancetype" ><![CDATA[%dw 2.0
output application/java
---
payload.Sheet1.maintenance[0]]]></ee:set-variable>
				<ee:set-variable variableName="newfilename" ><![CDATA[%dw 2.0
output application/java
---
attributes.timestamp as String {format: "YMddHHmmss"} ++ '-' ++ payload.Sheet1.maintenance[0] ++ '-' ++ attributes.fileName
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="e9cfca51-7b7b-4572-881e-90ab68b4c595" >
			<when expression="#[vars.maintenancetype == 'insert']">
				<flow-ref doc:name="maintenance-menu-insert" doc:id="2cbedc09-529e-4f88-a580-9349f04493a2" name="maintenance-menu-insert"/>
			</when>
			<when expression="#[vars.maintenancetype == 'update']">
				<flow-ref doc:name="maintenance-menu-update" doc:id="c4a9da30-3264-4915-80bc-cfad5d92fa11" name="maintenance-menu-update"/>
			</when>
			<when expression="#[vars.maintenancetype == 'delete']">
				<flow-ref doc:name="maintenance-menu-delete" doc:id="14685d3d-c187-4b23-847f-8c6333c50dc4" name="maintenance-menu-delete"/>
			</when>
			<otherwise >
				<set-payload value="Unknown maintenance type" doc:name="Set Payload" doc:id="8078c7da-31cd-45e4-b627-09aa61dddff5" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="39ee7b47-be07-4294-bcf7-744450c8ac23" message="#[payload]"/>
	</flow>
	<flow name="maintenance-menu-insert" doc:id="2b088518-30aa-4cc8-ac86-8baa066e4c4b" >
		<ee:transform doc:name="CDM to Insert" doc:id="23df60f9-9680-4c7f-b991-afbd4f9c3c13" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.menu map (insert,insertindex) -> {
	  "restaurantid": insert.restaurantid as Number,
      "item": insert.item as String,
      "price": insert.price as Number,
      "itemid": insert.itemid as Number,
      "lastchange": now() as DateTime {format: "Y-M-dd HH:mm:ss"}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:bulk-insert doc:name="Bulk insert" doc:id="40306e4c-1883-4f77-aaa0-3777d782816c" config-ref="Database_Config">
			<db:sql > insert into menu 
 (restaurantid,item,price,itemid,lastchange)
 VALUES(:restaurantid, :item, :price , :itemid , :lastchange);</db:sql>
		</db:bulk-insert>
		<logger level="INFO" doc:name="Logger" doc:id="5b4b4db1-8d26-4e24-a74a-e8d405c5bdd8" message="#[payload]"/>
	</flow>
	<flow name="maintenance-menu-update" doc:id="f02e3031-9ebe-458b-8cb2-092d02f5922c" >
		<ee:transform doc:name="CDM to update" doc:id="6f9466be-8314-43e0-b5c5-34d7c1d67451" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.menu map (insert,insertindex) -> {
	  "restaurantid": insert.restaurantid as Number,
      "item": insert.item as String,
      "price": insert.price as Number,
      "itemid": insert.itemid as Number,
      "lastchange": now() as DateTime {format: "Y-M-dd HH:mm:ss"}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:bulk-update doc:name="Bulk update" doc:id="0af036ce-9f68-4a43-b98c-762cc8f6eec8" config-ref="Database_Config">
			<db:sql >update menu
SET
 restaurantid = :restaurantid,
 item = :item,
 price = :price,
 itemid = :itemid,
 lastchange = :lastchange
 where
 restaurantid = :restaurantid
 and   itemid = :itemid
</db:sql>
		</db:bulk-update>
		<logger level="INFO" doc:name="Logger" doc:id="646c6e22-3321-4013-b22b-4ee7f878abe4" message="#[payload]"/>
	</flow>
	<flow name="maintenance-menu-delete" doc:id="3dca86b2-717b-4db8-9ba5-cc61bfbd26e7" >
		<ee:transform doc:name="CDM to delete" doc:id="e19084a2-9077-48f5-8fe9-763e9f27ecec" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload.menu map (insert,insertindex) -> {
	  "restaurantid": insert.restaurantid as Number,
      "item": insert.item as String,
      "price": insert.price as Number,
      "itemid": insert.itemid as Number,
      "lastchange": now() as DateTime {format: "Y-M-dd HH:mm:ss"}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:bulk-delete doc:name="Bulk delete" doc:id="f40c4be8-24cb-4975-970f-91c1bc5a191f" config-ref="Database_Config">
			<db:sql >delete from menu
 where
 restaurantid = :restaurantid
 and   itemid = :itemid</db:sql>
		</db:bulk-delete>
		<logger level="INFO" doc:name="Logger" doc:id="33cad024-b4cd-49ab-a2fe-89a47969d1e7" message="#[payload]"/>
	</flow>
</mule>
